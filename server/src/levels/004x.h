#ifndef CURSORS_LEVEL004X_H
#define CURSORS_LEVEL004X_H

#include "LevelObjects.h"

class Level0040 : public Level {
public:
	Level0040() : Level(47, 148){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(0, 280, 70, 20, 0x000000));
		AddObject(new ObjWall(40, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(80, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(120, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(160, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(200, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(240, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(280, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(320, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(360, 0, 10, 10, 0x000000));
		AddObject(new ObjWall(10, 10, 20, 10, 0x000000));
		AddObject(new ObjWall(60, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(100, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(140, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(180, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(220, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(260, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(300, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(340, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(380, 10, 10, 20, 0x000000));
		AddObject(new ObjWall(20, 20, 40, 10, 0x000000));
		AddObject(new ObjWall(70, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(110, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(150, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(190, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(230, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(270, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(310, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(350, 20, 30, 10, 0x000000));
		AddObject(new ObjWall(0, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(20, 30, 10, 120, 0x000000));
		AddObject(new ObjWall(70, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(110, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(150, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(190, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(230, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(270, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(310, 30, 10, 10, 0x000000));
		AddObject(new ObjWall(360, 30, 20, 20, 0x000000));
		AddObject(new ObjWall(40, 40, 20, 20, 0x000000));
		AddObject(new ObjWall(90, 40, 10, 30, 0x000000));
		AddObject(new ObjWall(130, 40, 10, 30, 0x000000));
		AddObject(new ObjWall(170, 40, 10, 40, 0x000000));
		AddObject(new ObjWall(210, 40, 10, 20, 0x000000));
		AddObject(new ObjWall(250, 40, 10, 20, 0x000000));
		AddObject(new ObjWall(290, 40, 10, 40, 0x000000));
		AddObject(new ObjWall(330, 40, 20, 40, 0x000000));
		AddObject(new ObjWall(390, 40, 10, 10, 0x000000));
		AddObject(new ObjWall(10, 50, 10, 10, 0x000000));
		AddObject(new ObjWall(60, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(100, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(140, 50, 30, 20, 0x000000));
		AddObject(new ObjWall(180, 50, 10, 30, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(190, 50, 10, 10, 0x9999FF)));
		AddObject(new ObjWall(200, 50, 10, 10, 0x000000));
		AddObject(new ObjWall(220, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(260, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(300, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(370, 50, 10, 240, 0x000000));
		AddObject(new ObjWall(50, 60, 10, 50, 0x000000));
		AddObject(new ObjWall(230, 60, 10, 40, 0x000000));
		AddObject(new ObjWall(280, 60, 10, 60, 0x000000));
		AddObject(new ObjWall(350, 60, 10, 10, 0x000000));
		AddObject(new ObjWall(380, 60, 10, 10, 0x000000));
		AddObject(new ObjWall(0, 70, 10, 10, 0x000000));
		AddObject(new ObjWall(30, 70, 10, 10, 0x000000));
		AddObject(new ObjWall(70, 70, 10, 10, 0x000000));
		AddObject(new ObjWall(110, 70, 10, 20, 0x000000));
		AddObject(new ObjWall(150, 70, 20, 10, 0x000000));
		AddObject(new ObjWall(190, 70, 30, 10, 0x000000));
		AddObject(new ObjWall(250, 70, 20, 10, 0x000000));
		AddObject(new ObjWall(310, 70, 10, 70, 0x000000));
		AddObject(new ObjWall(80, 80, 30, 10, 0x000000));
		AddObject(new ObjWall(120, 80, 20, 10, 0x000000));
		AddObject(new ObjWall(150, 80, 10, 50, 0x000000));
		AddObject(new ObjWall(250, 80, 10, 100, 0x000000));
		AddObject(new ObjWall(340, 80, 10, 220, 0x000000));
		AddObject(new ObjWall(360, 80, 10, 10, 0x000000));
		AddObject(new ObjWall(390, 80, 10, 10, 0x000000));
		AddObject(new ObjWall(10, 90, 10, 10, 0x000000));
		AddObject(new ObjWall(40, 90, 10, 10, 0x000000));
		AddObject(new ObjWall(60, 90, 10, 10, 0x000000));
		AddObject(new ObjWall(80, 90, 10, 40, 0x000000));
		AddObject(new ObjWall(170, 90, 60, 10, 0x000000));
		AddObject(new ObjWall(270, 90, 10, 30, 0x000000));
		AddObject(new ObjWall(300, 90, 10, 10, 0x000000));
		AddObject(new ObjWall(320, 90, 10, 10, 0x000000));
		AddObject(new ObjWall(350, 100, 10, 10, 0x000000));
		AddObject(new ObjWall(380, 100, 10, 10, 0x000000));
		AddObject(new ObjWall(0, 110, 10, 10, 0x000000));
		AddObject(new ObjWall(30, 110, 10, 20, 0x000000));
		AddObject(new ObjWall(70, 110, 10, 20, 0x000000));
		AddObject(new ObjWall(160, 110, 90, 20, 0x000000));
		AddObject(new ObjWall(290, 110, 10, 10, 0x000000));
		AddObject(new ObjWall(330, 110, 10, 10, 0x000000));
		AddObject(new ObjWall(40, 120, 30, 10, 0x000000));
		AddObject(new ObjWall(90, 120, 60, 10, 0x000000));
		AddObject(new ObjWall(360, 120, 10, 10, 0x000000));
		AddObject(new ObjWall(390, 120, 10, 10, 0x000000));
		AddObject(new ObjWall(10, 130, 10, 10, 0x000000));
		AddObject(new ObjWall(90, 130, 10, 30, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(100, 130, 130, 40, 0xFF9999)));
		AddObject(new ObjWall(260, 130, 50, 10, 0x000000));
		AddObject(new ObjWall(320, 130, 10, 10, 0x000000));
		AddObject(new ObjWall(70, 140, 10, 160, 0x000000));
		AddObject(new ObjWall(350, 140, 10, 10, 0x000000));
		AddObject(new ObjWall(380, 140, 10, 10, 0x000000));
		AddObject(new ObjWall(270, 150, 70, 10, 0x000000));
		AddObject(new ObjWall(0, 160, 20, 120, 0x000000));
		AddObject(new ObjWall(360, 160, 10, 10, 0x000000));
		AddObject(new ObjWall(390, 160, 10, 10, 0x000000));
		AddObject(new ObjWall(80, 170, 160, 130, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(240, 170, 10, 10, 0x9999FF)));
		AddObject(new ObjWall(260, 170, 70, 10, 0x000000));
		AddObject(new ObjWall(350, 180, 10, 10, 0x000000));
		AddObject(new ObjWall(380, 180, 10, 10, 0x000000));
		AddObject(new ObjWall(240, 190, 100, 110, 0x000000));
		AddObject(new ObjWall(360, 200, 10, 10, 0x000000));
		AddObject(new ObjWall(390, 200, 10, 10, 0x000000));
		AddObject(new ObjWall(20, 210, 50, 70, 0x000000));
		AddObject(new ObjWall(350, 220, 10, 10, 0x000000));
		AddObject(new ObjWall(380, 220, 10, 10, 0x000000));
		AddObject(new ObjWall(360, 240, 10, 10, 0x000000));
		AddObject(new ObjWall(390, 240, 10, 10, 0x000000));
		AddObject(new ObjWall(350, 260, 10, 10, 0x000000));
		AddObject(new ObjWall(380, 260, 10, 10, 0x000000));
		AddObject(new ObjWall(360, 280, 10, 10, 0x000000));
		AddObject(new ObjWall(390, 280, 10, 20, 0x000000));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 230, 130, 20, 40));
		AddObject(new ObjClickBox(wallByColor[1], 90, 90, 30, 30, 8, 1000, 0xFF9999));
		AddObject(new ObjAreaCounter(wallByColor[2], 20, 160, 50, 50, 1, 0x9999FF));
	}
};

class Level0041 : public Level {
public:
	Level0041() : Level(31, 30){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(0, 0, 400, 10, 0x000000));
		AddObject(new ObjWall(0, 10, 10, 290, 0x000000));
		AddObject(new ObjWall(390, 10, 10, 290, 0x000000));
		AddObject(new ObjWall(10, 50, 10, 20, 0x000000));
		AddObject(new ObjWall(40, 50, 350, 20, 0x000000));
		AddObject(new ObjWall(70, 70, 10, 10, 0x000000));
		AddObject(new ObjWall(110, 70, 10, 10, 0x000000));
		AddObject(new ObjWall(360, 70, 10, 30, 0x000000));
		AddObject(new ObjWall(20, 80, 10, 70, 0x000000));
		AddObject(new ObjWall(50, 80, 10, 20, 0x000000));
		AddObject(new ObjWall(90, 80, 10, 20, 0x000000));
		AddObject(new ObjWall(130, 80, 10, 120, 0x000000));
		AddObject(new ObjWall(150, 80, 10, 30, 0x000000));
		AddObject(new ObjWall(220, 80, 10, 30, 0x000000));
		AddObject(new ObjWall(240, 80, 10, 70, 0x000000));
		AddObject(new ObjWall(340, 80, 10, 40, 0x000000));
		AddObject(new ObjWall(40, 90, 10, 10, 0x000000));
		AddObject(new ObjWall(60, 90, 30, 10, 0x000000));
		AddObject(new ObjWall(100, 90, 30, 10, 0x000000));
		AddObject(new ObjWall(160, 90, 60, 10, 0x000000));
		AddObject(new ObjWall(250, 90, 80, 10, 0x000000));
		AddObject(new ObjWall(380, 90, 10, 30, 0x000000));
		AddObject(new ObjWall(140, 100, 10, 10, 0x000000));
		AddObject(new ObjWall(180, 100, 10, 10, 0x000000));
		AddObject(new ObjWall(260, 100, 10, 10, 0x000000));
		AddObject(new ObjWall(310, 100, 10, 40, 0x000000));
		AddObject(new ObjWall(30, 110, 70, 10, 0x000000));
		AddObject(new ObjWall(110, 110, 10, 60, 0x000000));
		AddObject(new ObjWall(200, 110, 10, 20, 0x000000));
		AddObject(new ObjWall(280, 110, 10, 50, 0x000000));
		AddObject(new ObjWall(350, 110, 30, 10, 0x000000));
		AddObject(new ObjWall(150, 120, 50, 10, 0x000000));
		AddObject(new ObjWall(210, 120, 30, 10, 0x000000));
		AddObject(new ObjWall(250, 120, 30, 10, 0x000000));
		AddObject(new ObjWall(300, 120, 10, 10, 0x000000));
		AddObject(new ObjWall(30, 130, 20, 10, 0x000000));
		AddObject(new ObjWall(60, 130, 10, 40, 0x000000));
		AddObject(new ObjWall(80, 130, 30, 10, 0x000000));
		AddObject(new ObjWall(160, 130, 10, 40, 0x000000));
		AddObject(new ObjWall(220, 130, 10, 20, 0x000000));
		AddObject(new ObjWall(330, 130, 10, 40, 0x000000));
		AddObject(new ObjWall(360, 130, 20, 10, 0x000000));
		AddObject(new ObjWall(40, 140, 10, 10, 0x000000));
		AddObject(new ObjWall(140, 140, 10, 10, 0x000000));
		AddObject(new ObjWall(190, 140, 10, 30, 0x000000));
		AddObject(new ObjWall(210, 140, 10, 10, 0x000000));
		AddObject(new ObjWall(260, 140, 10, 30, 0x000000));
		AddObject(new ObjWall(360, 140, 10, 60, 0x000000));
		AddObject(new ObjWall(90, 150, 20, 10, 0x000000));
		AddObject(new ObjWall(290, 150, 40, 10, 0x000000));
		AddObject(new ObjWall(340, 150, 20, 10, 0x000000));
		AddObject(new ObjWall(370, 150, 10, 20, 0x000000));
		AddObject(new ObjWall(20, 160, 40, 10, 0x000000));
		AddObject(new ObjWall(70, 160, 10, 10, 0x000000));
		AddObject(new ObjWall(150, 160, 10, 10, 0x000000));
		AddObject(new ObjWall(170, 160, 20, 10, 0x000000));
		AddObject(new ObjWall(200, 160, 60, 10, 0x000000));
		AddObject(new ObjWall(310, 160, 10, 10, 0x000000));
		AddObject(new ObjWall(340, 160, 10, 10, 0x000000));
		AddObject(new ObjWall(20, 170, 10, 10, 0x000000));
		AddObject(new ObjWall(50, 170, 10, 40, 0x000000));
		AddObject(new ObjWall(90, 170, 10, 20, 0x000000));
		AddObject(new ObjWall(60, 180, 30, 10, 0x000000));
		AddObject(new ObjWall(110, 180, 10, 30, 0x000000));
		AddObject(new ObjWall(140, 180, 140, 10, 0x000000));
		AddObject(new ObjWall(290, 180, 70, 10, 0x000000));
		AddObject(new ObjWall(370, 180, 10, 10, 0x000000));
		AddObject(new ObjWall(10, 190, 10, 20, 0x000000));
		AddObject(new ObjWall(30, 190, 20, 10, 0x000000));
		AddObject(new ObjWall(240, 190, 10, 20, 0x000000));
		AddObject(new ObjWall(290, 190, 30, 10, 0x000000));
		AddObject(new ObjWall(330, 190, 10, 10, 0x000000));
		AddObject(new ObjWall(30, 200, 10, 50, 0x000000));
		AddObject(new ObjWall(60, 200, 50, 10, 0x000000));
		AddObject(new ObjWall(150, 200, 40, 10, 0x000000));
		AddObject(new ObjWall(200, 200, 30, 10, 0x000000));
		AddObject(new ObjWall(270, 200, 30, 10, 0x000000));
		AddObject(new ObjWall(130, 210, 10, 20, 0x000000));
		AddObject(new ObjWall(180, 210, 10, 70, 0x000000));
		AddObject(new ObjWall(220, 210, 10, 20, 0x000000));
		AddObject(new ObjWall(270, 210, 10, 30, 0x000000));
		wallByColor[6].push_back(AddObject(new ObjWall(310, 210, 80, 10, 0x3333FF)));
		AddObject(new ObjWall(20, 220, 10, 10, 0x000000));
		AddObject(new ObjWall(40, 220, 30, 10, 0x000000));
		AddObject(new ObjWall(80, 220, 50, 10, 0x000000));
		AddObject(new ObjWall(140, 220, 30, 10, 0x000000));
		AddObject(new ObjWall(190, 220, 20, 10, 0x000000));
		AddObject(new ObjWall(230, 220, 40, 10, 0x000000));
		AddObject(new ObjWall(290, 220, 10, 40, 0x000000));
		wallByColor[6].push_back(AddObject(new ObjWall(310, 220, 10, 70, 0x3333FF)));
		wallByColor[5].push_back(AddObject(new ObjWall(320, 220, 70, 10, 0xFF99FF)));
		AddObject(new ObjWall(60, 230, 10, 50, 0x000000));
		AddObject(new ObjWall(100, 230, 10, 50, 0x000000));
		AddObject(new ObjWall(120, 230, 10, 10, 0x000000));
		AddObject(new ObjWall(250, 230, 10, 10, 0x000000));
		wallByColor[5].push_back(AddObject(new ObjWall(320, 230, 10, 60, 0xFF99FF)));
		wallByColor[4].push_back(AddObject(new ObjWall(330, 230, 60, 10, 0x99FFFF)));
		AddObject(new ObjWall(10, 240, 10, 10, 0x000000));
		AddObject(new ObjWall(80, 240, 10, 60, 0x000000));
		AddObject(new ObjWall(140, 240, 10, 20, 0x000000));
		AddObject(new ObjWall(160, 240, 20, 10, 0x000000));
		AddObject(new ObjWall(200, 240, 10, 60, 0x000000));
		AddObject(new ObjWall(230, 240, 10, 20, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(330, 240, 10, 50, 0x99FFFF)));
		wallByColor[3].push_back(AddObject(new ObjWall(340, 240, 50, 10, 0xFFFF99)));
		AddObject(new ObjWall(110, 250, 30, 10, 0x000000));
		AddObject(new ObjWall(220, 250, 10, 30, 0x000000));
		AddObject(new ObjWall(240, 250, 50, 10, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(340, 250, 10, 40, 0xFFFF99)));
		wallByColor[2].push_back(AddObject(new ObjWall(350, 250, 40, 10, 0x9999FF)));
		AddObject(new ObjWall(20, 260, 40, 10, 0x000000));
		AddObject(new ObjWall(160, 260, 10, 40, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(350, 260, 10, 30, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(360, 260, 30, 10, 0xFF9999)));
		AddObject(new ObjWall(130, 270, 30, 10, 0x000000));
		AddObject(new ObjWall(240, 270, 60, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(360, 270, 10, 20, 0xFF9999)));
		AddObject(new ObjWall(10, 280, 40, 20, 0x000000));
		AddObject(new ObjWall(240, 280, 10, 20, 0x000000));
		AddObject(new ObjWall(50, 290, 30, 10, 0x000000));
		AddObject(new ObjWall(90, 290, 70, 10, 0x000000));
		AddObject(new ObjWall(170, 290, 30, 10, 0x000000));
		AddObject(new ObjWall(210, 290, 30, 10, 0x000000));
		AddObject(new ObjWall(250, 290, 140, 10, 0x000000));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 350, 10, 40, 40));
		AddObject(new ObjTeleport(LevelManager::GetInitialLevel(), 370, 270, 20, 20));
		AddObject(new ObjAreaCounter(wallByColor[1], 170, 140, 20, 20, 1, 0xFF9999));
		AddObject(new ObjAreaCounter(wallByColor[2], 250, 70, 20, 20, 1, 0x9999FF));
		AddObject(new ObjAreaCounter(wallByColor[3], 110, 270, 20, 20, 1, 0xFFFF99));
		AddObject(new ObjAreaCounter(wallByColor[4], 40, 230, 20, 20, 1, 0x99FFFF));
		AddObject(new ObjAreaCounter(wallByColor[5], 250, 190, 20, 20, 1, 0xFF99FF));
		AddObject(new ObjAreaCounter(wallByColor[6], 340, 130, 20, 20, 1, 0x3333FF));
		AddObject(new ObjText("Curiosity killed the mouse", 200, 35, true));
	}
};

class Level0042 : public Level {
public:
	Level0042() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(80, 0, 20, 120, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(120, 0, 20, 50, 0x99FFFF)));
		wallByColor[3].push_back(AddObject(new ObjWall(140, 0, 20, 50, 0xFFFF99)));
		AddObject(new ObjWall(210, 0, 10, 120, 0x000000));
		AddObject(new ObjWall(230, 0, 10, 40, 0x000000));
		AddObject(new ObjWall(340, 0, 10, 80, 0x000000));
		AddObject(new ObjWall(260, 10, 70, 10, 0x000000));
		AddObject(new ObjWall(250, 20, 20, 10, 0x000000));
		AddObject(new ObjWall(280, 20, 10, 60, 0x000000));
		AddObject(new ObjWall(300, 30, 40, 10, 0x000000));
		AddObject(new ObjWall(260, 40, 10, 20, 0x000000));
		AddObject(new ObjWall(0, 50, 70, 10, 0x000000));
		AddObject(new ObjWall(120, 50, 90, 10, 0x000000));
		AddObject(new ObjWall(220, 50, 40, 10, 0x000000));
		AddObject(new ObjWall(290, 50, 40, 10, 0x000000));
		AddObject(new ObjWall(350, 50, 40, 10, 0x000000));
		AddObject(new ObjWall(10, 70, 70, 10, 0x000000));
		AddObject(new ObjWall(100, 70, 100, 10, 0x000000));
		AddObject(new ObjWall(230, 70, 40, 10, 0x000000));
		AddObject(new ObjWall(290, 70, 20, 10, 0x000000));
		AddObject(new ObjWall(320, 70, 20, 10, 0x000000));
		AddObject(new ObjWall(360, 70, 40, 10, 0x000000));
		AddObject(new ObjWall(260, 80, 10, 60, 0x000000));
		AddObject(new ObjWall(290, 80, 10, 60, 0x000000));
		AddObject(new ObjWall(330, 80, 10, 40, 0x000000));
		AddObject(new ObjWall(360, 80, 10, 20, 0x000000));
		AddObject(new ObjWall(0, 90, 70, 10, 0x000000));
		AddObject(new ObjWall(110, 90, 100, 10, 0x000000));
		AddObject(new ObjWall(300, 90, 20, 10, 0x000000));
		AddObject(new ObjWall(350, 90, 10, 50, 0x000000));
		AddObject(new ObjWall(380, 90, 10, 70, 0x000000));
		AddObject(new ObjWall(230, 100, 30, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(270, 100, 20, 40, 0xFF9999)));
		AddObject(new ObjWall(10, 110, 70, 10, 0x000000));
		AddObject(new ObjWall(100, 110, 70, 10, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(170, 110, 10, 10, 0x99FFFF)));
		AddObject(new ObjWall(180, 110, 30, 10, 0x000000));
		AddObject(new ObjWall(230, 110, 10, 40, 0x000000));
		AddObject(new ObjWall(250, 110, 10, 30, 0x000000));
		AddObject(new ObjWall(310, 110, 20, 10, 0x000000));
		AddObject(new ObjWall(370, 110, 10, 50, 0x000000));
		AddObject(new ObjWall(120, 120, 10, 70, 0x000000));
		AddObject(new ObjWall(160, 120, 10, 30, 0x000000));
		AddObject(new ObjWall(180, 120, 10, 50, 0x000000));
		AddObject(new ObjWall(0, 130, 110, 20, 0x000000));
		AddObject(new ObjWall(140, 130, 10, 40, 0x000000));
		AddObject(new ObjWall(300, 130, 50, 10, 0x000000));
		AddObject(new ObjWall(210, 140, 20, 10, 0x000000));
		AddObject(new ObjWall(310, 140, 10, 60, 0x000000));
		AddObject(new ObjWall(210, 150, 10, 20, 0x000000));
		AddObject(new ObjWall(250, 150, 50, 10, 0x000000));
		AddObject(new ObjWall(330, 150, 40, 10, 0x000000));
		AddObject(new ObjWall(10, 160, 110, 10, 0x000000));
		AddObject(new ObjWall(150, 160, 30, 10, 0x000000));
		AddObject(new ObjWall(190, 160, 20, 130, 0x000000));
		AddObject(new ObjWall(230, 160, 30, 10, 0x000000));
		AddObject(new ObjWall(290, 160, 10, 20, 0x000000));
		AddObject(new ObjWall(330, 160, 10, 60, 0x000000));
		AddObject(new ObjWall(150, 170, 10, 80, 0x000000));
		AddObject(new ObjWall(230, 170, 10, 20, 0x000000));
		AddObject(new ObjWall(270, 170, 10, 40, 0x000000));
		AddObject(new ObjWall(350, 170, 50, 10, 0x000000));
		AddObject(new ObjWall(0, 180, 110, 10, 0x000000));
		AddObject(new ObjWall(130, 180, 10, 10, 0x000000));
		AddObject(new ObjWall(170, 180, 10, 90, 0x000000));
		AddObject(new ObjWall(220, 180, 10, 50, 0x000000));
		AddObject(new ObjWall(250, 180, 20, 10, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(120, 190, 10, 10, 0x99FFFF)));
		AddObject(new ObjWall(280, 190, 30, 10, 0x000000));
		AddObject(new ObjWall(340, 190, 50, 10, 0x000000));
		AddObject(new ObjWall(10, 200, 140, 10, 0x000000));
		AddObject(new ObjWall(240, 200, 30, 10, 0x000000));
		AddObject(new ObjWall(290, 210, 40, 10, 0x000000));
		AddObject(new ObjWall(350, 210, 50, 40, 0x000000));
		AddObject(new ObjWall(0, 220, 140, 10, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(140, 220, 10, 10, 0xFFFF99)));
		AddObject(new ObjWall(230, 220, 70, 10, 0x000000));
		AddObject(new ObjWall(70, 230, 10, 40, 0x000000));
		AddObject(new ObjWall(310, 230, 40, 10, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(0, 240, 10, 10, 0x9999FF)));
		AddObject(new ObjWall(10, 240, 50, 10, 0x000000));
		AddObject(new ObjWall(90, 240, 60, 10, 0x000000));
		AddObject(new ObjWall(210, 240, 50, 10, 0x000000));
		AddObject(new ObjWall(270, 240, 10, 30, 0x000000));
		AddObject(new ObjWall(340, 240, 10, 50, 0x000000));
		AddObject(new ObjWall(50, 250, 10, 40, 0x000000));
		AddObject(new ObjWall(280, 250, 50, 10, 0x000000));
		AddObject(new ObjWall(80, 260, 90, 10, 0x000000));
		AddObject(new ObjWall(220, 260, 50, 10, 0x000000));
		AddObject(new ObjWall(240, 270, 10, 30, 0x000000));
		AddObject(new ObjWall(290, 270, 50, 20, 0x000000));
		AddObject(new ObjWall(60, 280, 130, 10, 0x000000));
		AddObject(new ObjWall(210, 280, 20, 10, 0x000000));
		AddObject(new ObjWall(260, 280, 30, 10, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(190, 290, 20, 10, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(210, 290, 20, 10, 0xFF9999)));
		AddObject(new ObjClickBox(wallByColor[1], 355, 5, 40, 40, 5, 1000, 0xFF9999));
		AddObject(new ObjClickBox(wallByColor[2], 355, 255, 40, 40, 5, 1000, 0x9999FF));
		AddObject(new ObjClickBox(wallByColor[3], 5, 255, 40, 40, 5, 1000, 0xFFFF99));
		AddObject(new ObjClickBox(wallByColor[4], 5, 5, 40, 40, 5, 1000, 0x99FFFF));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 160, 0, 50, 50));
	}
};

class Level0043 : public Level {
public:
	Level0043() : Level(291, 286){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		wallByColor[2].push_back(AddObject(new ObjWall(350, 0, 10, 40, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(0, 40, 40, 10, 0xFF9999)));
		AddObject(new ObjWall(40, 40, 320, 10, 0x000000));
		AddObject(new ObjWall(40, 50, 10, 210, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(90, 50, 10, 40, 0xFFFF99)));
		AddObject(new ObjWall(90, 90, 310, 10, 0x000000));
		AddObject(new ObjWall(90, 100, 10, 110, 0x000000));
		AddObject(new ObjWall(140, 140, 220, 20, 0x000000));
		wallByColor[5].push_back(AddObject(new ObjWall(140, 160, 10, 40, 0xFF99FF)));
		AddObject(new ObjWall(350, 160, 10, 50, 0x000000));
		AddObject(new ObjWall(100, 200, 250, 10, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(350, 210, 10, 40, 0x99FFFF)));
		AddObject(new ObjWall(50, 250, 350, 10, 0x000000));
		wallByColor[6].push_back(AddObject(new ObjWall(300, 260, 10, 40, 0x3333FF)));
		wallByColor[5].push_back(AddObject(new ObjWall(310, 260, 10, 40, 0xFF99FF)));
		wallByColor[4].push_back(AddObject(new ObjWall(320, 260, 10, 40, 0x99FFFF)));
		wallByColor[3].push_back(AddObject(new ObjWall(330, 260, 10, 40, 0xFFFF99)));
		wallByColor[2].push_back(AddObject(new ObjWall(340, 260, 10, 40, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(350, 260, 10, 40, 0xFF9999)));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 360, 260, 40, 40));
		AddObject(new ObjClickBox(wallByColor[1], 5, 265, 30, 30, 5, 1000, 0xFF9999));
		AddObject(new ObjClickBox(wallByColor[2], 5, 5, 30, 30, 5, 1000, 0x9999FF));
		AddObject(new ObjClickBox(wallByColor[3], 365, 5, 30, 30, 5, 1000, 0xFFFF99));
		AddObject(new ObjClickBox(wallByColor[4], 55, 55, 30, 30, 5, 1000, 0x99FFFF));
		AddObject(new ObjClickBox(wallByColor[5], 365, 215, 30, 30, 5, 1000, 0xFF99FF));
		AddObject(new ObjClickBox(wallByColor[6], 315, 165, 30, 30, 5, 1000, 0x3333FF));
	}
};

class Level0044 : public Level {
public:
	Level0044() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		wallByColor[1].push_back(AddObject(new ObjWall(220, 0, 180, 10, 0xFF9999)));
		AddObject(new ObjWall(10, 10, 170, 10, 0x000000));
		AddObject(new ObjWall(220, 10, 170, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(390, 10, 10, 130, 0xFF9999)));
		AddObject(new ObjWall(10, 20, 10, 110, 0x000000));
		AddObject(new ObjWall(170, 20, 10, 270, 0x000000));
		AddObject(new ObjWall(220, 20, 10, 270, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(230, 20, 150, 10, 0xFF9999)));
		AddObject(new ObjWall(380, 20, 10, 110, 0x000000));
		AddObject(new ObjWall(30, 30, 130, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(230, 30, 10, 110, 0xFF9999)));
		AddObject(new ObjWall(240, 30, 130, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(370, 30, 10, 90, 0xFF9999)));
		AddObject(new ObjWall(30, 40, 10, 70, 0x000000));
		AddObject(new ObjWall(110, 40, 10, 50, 0x000000));
		AddObject(new ObjWall(150, 40, 10, 90, 0x000000));
		AddObject(new ObjWall(240, 40, 10, 90, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(250, 40, 30, 10, 0xFF9999)));
		AddObject(new ObjWall(280, 40, 10, 50, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(290, 40, 20, 10, 0xFF9999)));
		AddObject(new ObjWall(360, 40, 10, 70, 0x000000));
		AddObject(new ObjWall(90, 50, 10, 60, 0x000000));
		AddObject(new ObjWall(130, 50, 10, 60, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(250, 50, 10, 70, 0xFF9999)));
		AddObject(new ObjWall(260, 50, 10, 60, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(270, 50, 10, 50, 0xFF9999)));
		wallByColor[1].push_back(AddObject(new ObjWall(290, 50, 10, 50, 0xFF9999)));
		AddObject(new ObjWall(300, 50, 10, 60, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(280, 90, 10, 10, 0xFF9999)));
		AddObject(new ObjWall(40, 100, 50, 10, 0x000000));
		AddObject(new ObjWall(100, 100, 30, 10, 0x000000));
		AddObject(new ObjWall(270, 100, 30, 10, 0x000000));
		AddObject(new ObjWall(310, 100, 50, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(260, 110, 110, 10, 0xFF9999)));
		AddObject(new ObjWall(20, 120, 130, 10, 0x000000));
		AddObject(new ObjWall(250, 120, 130, 10, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(240, 130, 150, 10, 0xFF9999)));
		AddObject(new ObjWall(0, 140, 170, 20, 0x000000));
		AddObject(new ObjWall(230, 140, 170, 20, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(0, 160, 170, 10, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(230, 160, 170, 10, 0xFFFF99)));
		wallByColor[2].push_back(AddObject(new ObjWall(0, 170, 10, 130, 0x9999FF)));
		AddObject(new ObjWall(10, 170, 150, 10, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(160, 170, 10, 110, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(230, 170, 10, 110, 0xFFFF99)));
		AddObject(new ObjWall(240, 170, 150, 10, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(390, 170, 10, 130, 0xFFFF99)));
		AddObject(new ObjWall(10, 180, 10, 110, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(20, 180, 130, 10, 0x9999FF)));
		AddObject(new ObjWall(150, 180, 10, 90, 0x000000));
		AddObject(new ObjWall(240, 180, 10, 90, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(250, 180, 130, 10, 0xFFFF99)));
		AddObject(new ObjWall(380, 180, 10, 110, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(20, 190, 10, 90, 0x9999FF)));
		AddObject(new ObjWall(30, 190, 110, 10, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(140, 190, 10, 70, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(250, 190, 10, 70, 0xFFFF99)));
		AddObject(new ObjWall(260, 190, 110, 10, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(370, 190, 10, 90, 0xFFFF99)));
		AddObject(new ObjWall(30, 200, 10, 70, 0x000000));
		AddObject(new ObjWall(90, 200, 10, 50, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(100, 200, 30, 10, 0x9999FF)));
		AddObject(new ObjWall(130, 200, 10, 50, 0x000000));
		AddObject(new ObjWall(260, 200, 10, 50, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(270, 200, 30, 10, 0xFFFF99)));
		AddObject(new ObjWall(300, 200, 10, 50, 0x000000));
		AddObject(new ObjWall(360, 200, 10, 70, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(100, 210, 10, 50, 0x9999FF)));
		AddObject(new ObjWall(110, 210, 10, 60, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(120, 210, 10, 50, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(270, 210, 10, 50, 0xFFFF99)));
		AddObject(new ObjWall(280, 210, 10, 60, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(290, 210, 10, 50, 0xFFFF99)));
		wallByColor[2].push_back(AddObject(new ObjWall(90, 250, 10, 10, 0x9999FF)));
		wallByColor[2].push_back(AddObject(new ObjWall(130, 250, 10, 10, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(260, 250, 10, 10, 0xFFFF99)));
		wallByColor[3].push_back(AddObject(new ObjWall(300, 250, 10, 10, 0xFFFF99)));
		AddObject(new ObjWall(40, 260, 70, 10, 0x000000));
		AddObject(new ObjWall(120, 260, 30, 10, 0x000000));
		AddObject(new ObjWall(250, 260, 30, 10, 0x000000));
		AddObject(new ObjWall(290, 260, 70, 10, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(30, 270, 130, 10, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(240, 270, 130, 10, 0xFFFF99)));
		AddObject(new ObjWall(20, 280, 150, 10, 0x000000));
		AddObject(new ObjWall(230, 280, 150, 10, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(10, 290, 170, 10, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(220, 290, 170, 10, 0xFFFF99)));
		AddObject(new ObjClickBox(wallByColor[1], 45, 55, 40, 40, 5, 1000, 0xFF9999, 10000));
		AddObject(new ObjClickBox(wallByColor[2], 315, 55, 40, 40, 5, 1000, 0x9999FF, 10000));
		AddObject(new ObjClickBox(wallByColor[3], 45, 205, 40, 40, 5, 1000, 0xFFFF99, 10000));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 310, 200, 50, 50));
	}
};

class Level0045 : public Level {
public:
	Level0045() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(50, 20, 140, 10, 0x000000));
		AddObject(new ObjWall(210, 20, 140, 10, 0x000000));
		AddObject(new ObjWall(50, 30, 10, 30, 0x000000));
		AddObject(new ObjWall(180, 30, 10, 20, 0x000000));
		AddObject(new ObjWall(340, 30, 10, 30, 0x000000));
		AddObject(new ObjWall(70, 40, 100, 10, 0x000000));
		AddObject(new ObjWall(190, 40, 140, 10, 0x000000));
		AddObject(new ObjWall(20, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(70, 50, 10, 30, 0x000000));
		AddObject(new ObjWall(160, 50, 10, 20, 0x000000));
		AddObject(new ObjWall(320, 50, 10, 30, 0x000000));
		AddObject(new ObjWall(350, 50, 30, 10, 0x000000));
		AddObject(new ObjWall(20, 60, 10, 80, 0x000000));
		AddObject(new ObjWall(90, 60, 60, 10, 0x000000));
		AddObject(new ObjWall(170, 60, 140, 10, 0x000000));
		AddObject(new ObjWall(370, 60, 10, 80, 0x000000));
		AddObject(new ObjWall(40, 70, 30, 10, 0x000000));
		AddObject(new ObjWall(90, 70, 10, 30, 0x000000));
		AddObject(new ObjWall(140, 70, 10, 20, 0x000000));
		AddObject(new ObjWall(300, 70, 10, 30, 0x000000));
		AddObject(new ObjWall(330, 70, 30, 10, 0x000000));
		AddObject(new ObjWall(40, 80, 10, 90, 0x000000));
		AddObject(new ObjWall(150, 80, 140, 10, 0x000000));
		AddObject(new ObjWall(350, 80, 10, 40, 0x000000));
		AddObject(new ObjWall(60, 90, 30, 10, 0x000000));
		AddObject(new ObjWall(310, 90, 30, 10, 0x000000));
		AddObject(new ObjWall(60, 100, 10, 90, 0x000000));
		AddObject(new ObjWall(330, 110, 20, 10, 0x000000));
		AddObject(new ObjWall(90, 120, 90, 10, 0x000000));
		AddObject(new ObjWall(220, 120, 90, 10, 0x000000));
		AddObject(new ObjWall(330, 120, 10, 90, 0x000000));
		AddObject(new ObjWall(90, 130, 10, 50, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(140, 130, 10, 40, 0x99FFFF)));
		wallByColor[3].push_back(AddObject(new ObjWall(150, 130, 10, 40, 0xFFFF99)));
		wallByColor[2].push_back(AddObject(new ObjWall(160, 130, 10, 40, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(170, 130, 10, 40, 0xFF9999)));
		wallByColor[1].push_back(AddObject(new ObjWall(220, 130, 10, 40, 0xFF9999)));
		wallByColor[2].push_back(AddObject(new ObjWall(230, 130, 10, 40, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(240, 130, 10, 40, 0xFFFF99)));
		wallByColor[4].push_back(AddObject(new ObjWall(250, 130, 10, 40, 0x99FFFF)));
		AddObject(new ObjWall(300, 130, 10, 50, 0x000000));
		AddObject(new ObjWall(350, 130, 20, 10, 0x000000));
		AddObject(new ObjWall(350, 140, 10, 90, 0x000000));
		AddObject(new ObjWall(20, 160, 20, 10, 0x000000));
		AddObject(new ObjWall(370, 160, 10, 90, 0x000000));
		AddObject(new ObjWall(20, 170, 10, 80, 0x000000));
		AddObject(new ObjWall(100, 170, 80, 10, 0x000000));
		AddObject(new ObjWall(220, 170, 80, 10, 0x000000));
		AddObject(new ObjWall(40, 180, 20, 10, 0x000000));
		AddObject(new ObjWall(40, 190, 10, 40, 0x000000));
		AddObject(new ObjWall(60, 200, 40, 10, 0x000000));
		AddObject(new ObjWall(300, 200, 30, 10, 0x000000));
		AddObject(new ObjWall(90, 210, 10, 30, 0x000000));
		AddObject(new ObjWall(110, 210, 150, 10, 0x000000));
		AddObject(new ObjWall(300, 210, 10, 30, 0x000000));
		AddObject(new ObjWall(50, 220, 30, 10, 0x000000));
		AddObject(new ObjWall(250, 220, 10, 20, 0x000000));
		AddObject(new ObjWall(320, 220, 30, 10, 0x000000));
		AddObject(new ObjWall(70, 230, 10, 30, 0x000000));
		AddObject(new ObjWall(100, 230, 140, 10, 0x000000));
		AddObject(new ObjWall(260, 230, 40, 10, 0x000000));
		AddObject(new ObjWall(320, 230, 10, 30, 0x000000));
		AddObject(new ObjWall(30, 240, 30, 10, 0x000000));
		AddObject(new ObjWall(230, 240, 10, 20, 0x000000));
		AddObject(new ObjWall(340, 240, 30, 10, 0x000000));
		AddObject(new ObjWall(50, 250, 10, 30, 0x000000));
		AddObject(new ObjWall(80, 250, 140, 10, 0x000000));
		AddObject(new ObjWall(240, 250, 80, 10, 0x000000));
		AddObject(new ObjWall(340, 250, 10, 30, 0x000000));
		AddObject(new ObjWall(210, 260, 10, 20, 0x000000));
		AddObject(new ObjWall(60, 270, 130, 10, 0x000000));
		AddObject(new ObjWall(220, 270, 120, 10, 0x000000));
		AddObject(new ObjClickBox(wallByColor[1], 5, 5, 40, 40, 5, 1000, 0xFF9999));
		AddObject(new ObjClickBox(wallByColor[2], 355, 5, 40, 40, 5, 1000, 0x9999FF));
		AddObject(new ObjClickBox(wallByColor[3], 5, 255, 40, 40, 5, 1000, 0xFFFF99));
		AddObject(new ObjClickBox(wallByColor[4], 355, 255, 40, 40, 5, 1000, 0x99FFFF));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 260, 130, 40, 40));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 100, 130, 40, 40));
	}
};

class Level0046 : public Level {
public:
	Level0046() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(0, 0, 400, 30, 0x000000));
		wallByColor[5].push_back(AddObject(new ObjWall(40, 30, 20, 40, 0xFF99FF)));
		AddObject(new ObjWall(360, 30, 40, 200, 0x000000));
		AddObject(new ObjWall(0, 70, 320, 10, 0x000000));
		AddObject(new ObjWall(0, 80, 40, 220, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(80, 80, 20, 40, 0xFFFF99)));
		AddObject(new ObjWall(310, 80, 10, 100, 0x000000));
		AddObject(new ObjWall(80, 120, 190, 10, 0x000000));
		AddObject(new ObjWall(80, 130, 10, 100, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(130, 130, 20, 40, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(250, 130, 20, 40, 0xFF9999)));
		AddObject(new ObjWall(180, 140, 10, 20, 0x000000));
		AddObject(new ObjWall(210, 140, 10, 20, 0x000000));
		AddObject(new ObjWall(130, 170, 180, 10, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(300, 180, 20, 40, 0x99FFFF)));
		AddObject(new ObjWall(90, 220, 270, 10, 0x000000));
		wallByColor[6].push_back(AddObject(new ObjWall(340, 230, 20, 40, 0x3333FF)));
		AddObject(new ObjWall(40, 270, 360, 30, 0x000000));
		AddObject(new ObjAreaCounter(wallByColor[1], 230, 130, 40, 40, 1, 0xFF9999));
		AddObject(new ObjAreaCounter(wallByColor[2], 130, 130, 40, 40, 1, 0x9999FF));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 0, 30, 40, 40));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 360, 230, 40, 40));
		AddObject(new ObjAreaCounter(wallByColor[4], 80, 80, 40, 40, 1, 0x99FFFF));
		AddObject(new ObjAreaCounter(wallByColor[3], 280, 180, 40, 40, 1, 0xFFFF99));
		AddObject(new ObjAreaCounter(wallByColor[6], 40, 30, 40, 40, 1, 0x3333FF));
		AddObject(new ObjAreaCounter(wallByColor[5], 320, 230, 40, 40, 1, 0xFF99FF));
	}
};

class Level0047 : public Level {
public:
	Level0047() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(40, 0, 320, 60, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(40, 60, 20, 50, 0x99FFFF)));
		wallByColor[5].push_back(AddObject(new ObjWall(60, 60, 20, 50, 0xFF99FF)));
		AddObject(new ObjWall(130, 60, 140, 70, 0x000000));
		wallByColor[6].push_back(AddObject(new ObjWall(320, 60, 20, 50, 0x3333FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(340, 60, 20, 50, 0xFFFF99)));
		AddObject(new ObjWall(40, 110, 90, 20, 0x000000));
		AddObject(new ObjWall(270, 110, 90, 20, 0x000000));
		wallByColor[2].push_back(AddObject(new ObjWall(40, 130, 20, 40, 0x9999FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(340, 130, 20, 40, 0xFF9999)));
		AddObject(new ObjWall(170, 140, 10, 20, 0x000000));
		AddObject(new ObjWall(220, 140, 10, 20, 0x000000));
		AddObject(new ObjWall(40, 170, 320, 20, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(40, 190, 20, 50, 0x99FFFF)));
		wallByColor[5].push_back(AddObject(new ObjWall(60, 190, 20, 50, 0xFF99FF)));
		AddObject(new ObjWall(130, 190, 140, 110, 0x000000));
		wallByColor[6].push_back(AddObject(new ObjWall(320, 190, 20, 50, 0x3333FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(340, 190, 20, 50, 0xFFFF99)));
		AddObject(new ObjWall(40, 240, 90, 60, 0x000000));
		AddObject(new ObjWall(270, 240, 90, 60, 0x000000));
		AddObject(new ObjAreaCounter(wallByColor[1], 320, 130, 40, 40, 1, 0xFF9999));
		AddObject(new ObjAreaCounter(wallByColor[2], 40, 130, 40, 40, 1, 0x9999FF));
		AddObject(new ObjClickBox(wallByColor[3], 5, 5, 30, 30, 5, 1000, 0xFFFF99));
		AddObject(new ObjClickBox(wallByColor[4], 365, 5, 30, 30, 5, 1000, 0x99FFFF));
		AddObject(new ObjClickBox(wallByColor[5], 365, 265, 30, 30, 5, 1000, 0xFF99FF));
		AddObject(new ObjClickBox(wallByColor[6], 5, 265, 30, 30, 5, 1000, 0x3333FF));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 80, 190, 50, 50));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 80, 60, 50, 50));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 270, 60, 50, 50));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 270, 190, 50, 50));
	}
};

class Level0048 : public Level {
public:
	Level0048() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		wallByColor[2].push_back(AddObject(new ObjWall(220, 80, 10, 10, 0x9999FF)));
		wallByColor[3].push_back(AddObject(new ObjWall(130, 120, 10, 10, 0xFFFF99)));
		wallByColor[5].push_back(AddObject(new ObjWall(180, 120, 10, 10, 0xFF99FF)));
		wallByColor[5].push_back(AddObject(new ObjWall(220, 130, 10, 10, 0xFF99FF)));
		wallByColor[5].push_back(AddObject(new ObjWall(170, 160, 10, 10, 0xFF99FF)));
		wallByColor[5].push_back(AddObject(new ObjWall(210, 170, 10, 10, 0xFF99FF)));
		wallByColor[1].push_back(AddObject(new ObjWall(260, 170, 10, 10, 0xFF9999)));
		wallByColor[4].push_back(AddObject(new ObjWall(170, 210, 10, 10, 0x99FFFF)));
		AddObject(new ObjAreaCounter(wallByColor[1], 140, 200, 40, 60, 1, 0xFF9999));
		AddObject(new ObjAreaCounter(wallByColor[2], 250, 170, 60, 40, 1, 0x9999FF));
		AddObject(new ObjAreaCounter(wallByColor[3], 220, 40, 40, 60, 1, 0xFFFF99));
		AddObject(new ObjAreaCounter(wallByColor[4], 90, 90, 60, 40, 1, 0x99FFFF));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 50, 100, 40, 50));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 200, 0, 50, 40));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 310, 150, 40, 50));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 150, 260, 50, 40));
		AddObject(new ObjAreaCounter(wallByColor[5], 170, 120, 60, 60, 1, 0xFF99FF));
		AddObject(new ObjWall(0, 0, 50, 300, 0x000000));
		AddObject(new ObjWall(350, 0, 50, 300, 0x000000));
		AddObject(new ObjWall(60, 10, 140, 10, 0x000000));
		AddObject(new ObjWall(250, 10, 90, 10, 0x000000));
		AddObject(new ObjWall(60, 20, 10, 80, 0x000000));
		AddObject(new ObjWall(330, 20, 10, 130, 0x000000));
		AddObject(new ObjWall(80, 30, 120, 10, 0x000000));
		AddObject(new ObjWall(250, 30, 70, 60, 0x000000));
		AddObject(new ObjWall(80, 40, 100, 50, 0x000000));
		AddObject(new ObjWall(190, 40, 30, 10, 0x000000));
		AddObject(new ObjWall(230, 40, 20, 50, 0x000000));
		AddObject(new ObjWall(210, 50, 10, 60, 0x000000));
		AddObject(new ObjWall(190, 60, 10, 30, 0x000000));
		AddObject(new ObjWall(180, 80, 10, 10, 0x000000));
		AddObject(new ObjWall(200, 80, 10, 10, 0x000000));
		AddObject(new ObjWall(80, 90, 60, 10, 0x000000));
		AddObject(new ObjWall(260, 90, 60, 40, 0x000000));
		AddObject(new ObjWall(90, 100, 50, 20, 0x000000));
		AddObject(new ObjWall(150, 100, 50, 10, 0x000000));
		AddObject(new ObjWall(220, 100, 30, 10, 0x000000));
		AddObject(new ObjWall(150, 110, 10, 30, 0x000000));
		AddObject(new ObjWall(190, 110, 10, 20, 0x000000));
		AddObject(new ObjWall(240, 110, 10, 40, 0x000000));
		AddObject(new ObjWall(170, 120, 10, 40, 0x000000));
		AddObject(new ObjWall(200, 120, 30, 10, 0x000000));
		AddObject(new ObjWall(90, 130, 60, 10, 0x000000));
		AddObject(new ObjWall(260, 130, 10, 40, 0x000000));
		AddObject(new ObjWall(310, 130, 10, 20, 0x000000));
		AddObject(new ObjWall(90, 140, 10, 20, 0x000000));
		AddObject(new ObjWall(130, 140, 10, 130, 0x000000));
		AddObject(new ObjWall(220, 140, 20, 10, 0x000000));
		AddObject(new ObjWall(270, 140, 20, 10, 0x000000));
		AddObject(new ObjWall(300, 140, 10, 30, 0x000000));
		AddObject(new ObjWall(60, 150, 10, 140, 0x000000));
		AddObject(new ObjWall(80, 150, 10, 120, 0x000000));
		AddObject(new ObjWall(110, 150, 20, 10, 0x000000));
		AddObject(new ObjWall(150, 150, 20, 10, 0x000000));
		AddObject(new ObjWall(220, 150, 10, 30, 0x000000));
		AddObject(new ObjWall(150, 160, 10, 40, 0x000000));
		AddObject(new ObjWall(240, 160, 20, 10, 0x000000));
		AddObject(new ObjWall(270, 160, 30, 10, 0x000000));
		AddObject(new ObjWall(90, 170, 40, 100, 0x000000));
		AddObject(new ObjWall(170, 170, 40, 10, 0x000000));
		AddObject(new ObjWall(240, 170, 10, 30, 0x000000));
		AddObject(new ObjWall(200, 180, 10, 20, 0x000000));
		AddObject(new ObjWall(260, 180, 50, 90, 0x000000));
		AddObject(new ObjWall(160, 190, 30, 10, 0x000000));
		AddObject(new ObjWall(210, 190, 30, 10, 0x000000));
		AddObject(new ObjWall(180, 200, 10, 60, 0x000000));
		AddObject(new ObjWall(310, 200, 10, 70, 0x000000));
		AddObject(new ObjWall(330, 200, 10, 90, 0x000000));
		AddObject(new ObjWall(140, 210, 30, 50, 0x000000));
		AddObject(new ObjWall(190, 210, 70, 10, 0x000000));
		AddObject(new ObjWall(200, 220, 10, 20, 0x000000));
		AddObject(new ObjWall(220, 220, 40, 50, 0x000000));
		AddObject(new ObjWall(190, 250, 20, 10, 0x000000));
		AddObject(new ObjWall(140, 260, 10, 10, 0x000000));
		AddObject(new ObjWall(200, 260, 20, 10, 0x000000));
		AddObject(new ObjWall(70, 280, 80, 10, 0x000000));
		AddObject(new ObjWall(200, 280, 130, 10, 0x000000));
	}
};

class Level0049 : public Level {
public:
	Level0049() : Level(200, 150){}

	void OnInit(){
		std::vector<LevelObject*> wallByColor[7];
		AddObject(new ObjWall(40, 0, 140, 10, 0x000000));
		AddObject(new ObjWall(220, 0, 140, 10, 0x000000));
		AddObject(new ObjWall(40, 30, 140, 40, 0x000000));
		AddObject(new ObjWall(220, 30, 140, 40, 0x000000));
		AddObject(new ObjWall(180, 40, 40, 30, 0x000000));
		wallByColor[5].push_back(AddObject(new ObjWall(0, 50, 40, 20, 0xFF99FF)));
		wallByColor[6].push_back(AddObject(new ObjWall(360, 50, 40, 20, 0x3333FF)));
		AddObject(new ObjWall(40, 70, 30, 190, 0x000000));
		AddObject(new ObjWall(330, 70, 30, 190, 0x000000));
		AddObject(new ObjWall(90, 90, 20, 210, 0x000000));
		wallByColor[4].push_back(AddObject(new ObjWall(110, 90, 40, 20, 0x99FFFF)));
		AddObject(new ObjWall(150, 90, 100, 40, 0x000000));
		wallByColor[3].push_back(AddObject(new ObjWall(250, 90, 40, 20, 0xFFFF99)));
		AddObject(new ObjWall(290, 90, 20, 210, 0x000000));
		AddObject(new ObjWall(150, 130, 30, 130, 0x000000));
		AddObject(new ObjWall(220, 130, 30, 130, 0x000000));
		wallByColor[1].push_back(AddObject(new ObjWall(150, 260, 20, 40, 0xFF9999)));
		wallByColor[2].push_back(AddObject(new ObjWall(230, 260, 20, 40, 0x9999FF)));
		AddObject(new ObjAreaCounter(wallByColor[1], 150, 260, 30, 40, 1, 0xFF9999));
		AddObject(new ObjAreaCounter(wallByColor[2], 220, 260, 30, 40, 1, 0x9999FF));
		AddObject(new ObjClickBox(wallByColor[3], 115, 115, 30, 30, 5, 1000, 0xFFFF99));
		AddObject(new ObjClickBox(wallByColor[4], 255, 115, 30, 30, 5, 1000, 0x99FFFF));
		AddObject(new ObjAreaCounter(wallByColor[6], 0, 70, 40, 40, 1, 0x3333FF));
		AddObject(new ObjAreaCounter(wallByColor[5], 360, 70, 40, 40, 1, 0xFF99FF));
		AddObject(new ObjTeleport(LevelManager::GetNextLevel(this), 180, 0, 40, 40));
	}
};


#endif